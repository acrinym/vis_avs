--- a/WDL-EEL2/eel2/ns-eel-int.h	2025-01-15 18:27:57.998819176 +0100
+++ b/WDL-EEL2/eel2/ns-eel-int.h	2025-01-15 18:19:58.771960546 +0100
@@ -245,6 +245,9 @@
   void *gram_blocks;
 
   void *caller_this;
+
+  char* (*precompile_hook)(NSEEL_VMCTX ctx, char *code);
+  void (*postcompile_hook)(void);
 }
 compileContext;
 

--- a/WDL-EEL2/eel2/ns-eel.h	2025-01-15 18:28:01.587550387 +0100
+++ b/WDL-EEL2/eel2/ns-eel.h	2025-01-15 18:20:19.039179161 +0100
@@ -184,7 +184,9 @@
 void NSEEL_code_execute(NSEEL_CODEHANDLE code);
 void NSEEL_code_free(NSEEL_CODEHANDLE code);
 int *NSEEL_code_getstats(NSEEL_CODEHANDLE code); // 4 ints...source bytes, static code bytes, call code bytes, data bytes
-  
+
+void NSEEL_set_compile_hooks(char*(*precompile_hook)(NSEEL_VMCTX ctx, char* expression), void(*postcompile_hook)(void));
+void NSEEL_unset_compile_hooks();
 
 // global memory control/view
 extern unsigned int NSEEL_RAM_limitmem; // if nonzero, memory limit for user data, in bytes

--- a/WDL-EEL2/eel2/nseel-compiler.c	2025-01-15 18:27:59.015098702 +0100
+++ b/WDL-EEL2/eel2/nseel-compiler.c	2025-01-15 18:19:49.881719343 +0100
@@ -149,6 +149,9 @@
 } namespaceInformation;
 
 
+static char* (*nseel_precompile_hook)(NSEEL_VMCTX ctx, char *code);
+static void (*nseel_postcompile_hook)(void);
+
 
 
 static int nseel_evallib_stats[5]; // source bytes, static code bytes, call code bytes, data bytes, segments
@@ -4524,6 +4527,18 @@
 }
 #endif
 
+void NSEEL_set_compile_hooks(char*(*precompile_hook)(NSEEL_VMCTX ctx, char* expression), void(*postcompile_hook)(void)) {
+  if(precompile_hook || postcompile_hook) {
+    nseel_precompile_hook = precompile_hook;
+    nseel_postcompile_hook = postcompile_hook;
+  }
+}
+void NSEEL_unset_compile_hooks() {
+  nseel_precompile_hook = NULL;
+  nseel_postcompile_hook = NULL;
+}
+
+
 //------------------------------------------------------------------------------
 NSEEL_CODEHANDLE NSEEL_code_compile(NSEEL_VMCTX _ctx, const char *_expression, int lineoffs)
 {
@@ -4594,6 +4609,10 @@
   ctx->last_error_string[0]=0;
 
   if (!_expression || !*_expression) return 0;
+  
+  if (nseel_precompile_hook != NULL) {
+    _expression = nseel_precompile_hook(_ctx, _expression);
+  }
 
   _expression_end = _expression + strlen(_expression);
 
@@ -5182,6 +5201,10 @@
   }
   memset(ctx->l_stats,0,sizeof(ctx->l_stats));
 
+  if (nseel_postcompile_hook != NULL) {
+    nseel_postcompile_hook();
+  }
+
   return (NSEEL_CODEHANDLE)handle;
 }
